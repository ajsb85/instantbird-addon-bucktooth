<?xml version="1.0"?>
<!DOCTYPE bindings PUBLIC "-//MOZILLA//DTD XBL V1.0//EN"
                          "http://www.mozilla.org/xbl" [
    <!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
    %brandDTD;
  ]>

<bindings
    xmlns="http://www.mozilla.org/xbl"
    xmlns:xbl="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <binding id="menu-button">
    <content>
      <stack class="bucktooth-stack"
             xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
        <titlebar class="bucktooth-titlebar"/>
        <hbox class="bucktooth-buttonbar" mousethrough="always">
          <toolbarbutton class="bucktooth-buttonmin"
                         mousethrough="never"
                         oncommand="return minimize()"/>
          <toolbarbutton class="bucktooth-buttonmax"
                         mousethrough="never"
                         oncommand="return maximize()"/>
          <toolbarbutton class="bucktooth-buttonclose"
                         mousethrough="never"
                         oncommand="return close()"/>
        </hbox>
        <hbox mousethrough="always" class="bucktooth-menubar">
          <button type="menu"
                  label="&brandShortName;"
                  mousethrough="never"
                  class="bucktooth-button">
            <menupopup>
              <xbl:children/>
            </menupopup>
          </button>
        </hbox>
      </stack>
    </content>

    <implementation>
      <constructor>
      <![CDATA[
        // turn on Vista/Windows 7 extending content area into the non-client
        document.documentElement.setAttribute("chromemargin", "0, -1, -1 ,-1");

        // ugly Mozilla hack to enable sysmenu on right clicking the draggable
        document.getAnonymousElementByAttribute(this,
                                                "class",
                                                "bucktooth-titlebar")
                .addEventListener("MozMouseHittest",
                                  function(e) e.preventDefault(),
                                  false);

        // update the window size state
        var self = this;
        const SIZE_MAP = {
          1: "maximized",
          2: "minimized",
          3: "normal",
          4: "fullscreen"
        };
        window.addEventListener("resize",
                                function()
                                  self.setAttribute("sizemode",
                                                    SIZE_MAP[window.windowState]),
                                false);

        var button = document.getAnonymousElementByAttribute(this,
                                                             "class",
                                                             "bucktooth-button");
        window.addEventListener("DOMMenuBarActive",
                                function() button.open = true,
                                false);
      ]]>
      </constructor>

      <method name="minimize">
        <body>
        <![CDATA[
          window.minimize();
        ]]>
        </body>
      </method>

      <method name="maximize">
        <body>
        <![CDATA[
          if (window.windowState == window.STATE_NORMAL) {
            window.maximize();
          }
          else {
            window.restore();
          }
        ]]>
        </body>
      </method>

      <method name="close">
        <body>
        <![CDATA[
          var event = document.createEvent("mouseevent")
                              .QueryInterface(Components.interfaces
                                                        .nsIDOMMouseEvent);
          event.initMouseEvent("close",
                               true,
                               true,
                               window,
                               0,
                               0, 0,
                               0, 0,
                               false, false, false, false,
                               0,
                               window);
          window.dispatchEvent(event);
        ]]>
        </body>
      </method>
    </implementation>
  </binding>

</bindings>
